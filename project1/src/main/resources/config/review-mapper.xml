<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewDao">
	
	<select id="reviewSelectAll" resultType="ReviewVo">
		select * from REVIEW order by SCORE desc
	</select>
	
	<select id="reviewListPage" resultType="ReviewVo" parameterType="Criteria">
		SELECT  reviewseq, 
		        ponum, 
		        score,
		        title, 
		        content,
		        regdate
		 FROM ( 
		        SELECT reviewseq, 
		               ponum, 
		               score, 
		               title, 
		               content, 
		               regdate, 
		               ROW_NUMBER() OVER(ORDER BY reviewseq DESC) AS RNUM
		         FROM review
		         WHERE 1=1 
		         	<include refid="search"></include>
		                       ) MP
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY reviewseq DESC
	</select>
	
	<select id="reviewListCount" resultType="int" parameterType="Criteria">
		SELECT COUNT(reviewseq)
		   FROM review
		   WHERE 1=1
		<include refid="search"></include>	
		   AND reviewseq > 0
	</select>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()"> AND TITLE LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()"> AND CONTENT LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>

	<select id="reviewSelectOne" parameterType="int"
		resultType="ReviewVo">
		select * from REVIEW where REVIEWSEQ=#{reviewSeq}
	</select>

	<insert id="reviewInsert" parameterType="ReviewVo">
		insert into REVIEW
		(reviewseq, ponum, score, title, content)
		values (reviewseq.nextVal,
		#{poNum}, #{score}, #{title}, #{content})
	</insert>

	<update id="reviewUpdate" parameterType="ReviewVo">
		update REVIEW set
		SCORE=#{score}, TITLE=#{title}, CONTENT=#{content}
		where REVIEWSEQ=#{reviewSeq}
	</update>

	<delete id="reviewDelete" parameterType="int">
		delete from REVIEW where
		REVIEWSEQ=#{reviewSeq}
	</delete>
</mapper>